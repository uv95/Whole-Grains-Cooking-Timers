{"ast":null,"code":"var _jsxFileName = \"/Users/ulana/grains-timer/src/components/TimerContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ButtonClose from './ButtonClose';\nimport ButtonStart from './ButtonStart';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerContainer(_ref) {\n  _s();\n\n  let {\n    onClick,\n    name,\n    grainsTime\n  } = _ref;\n  const [timeValue, setTimeValue] = useState(`${grainsTime.toString().padStart(2, '0')}:00`);\n  const [dasharray, setDasharray] = useState(0);\n  const [btnText, setBtnText] = useState('START');\n  const [hover, setHover] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const myRef = useRef();\n\n  const playPause = function () {\n    isPlaying ? myRef.current.pause() : myRef.current.play();\n    setIsPlaying(true);\n  };\n\n  let timeLeft = {\n    total: grainsTime * 60,\n    min: grainsTime,\n    sec: 0\n  };\n\n  const updateTimer = function () {\n    setTimeValue(`${timeLeft.min.toString().padStart(2, '0')}:${timeLeft.sec.toString().padStart(2, '0')}`);\n  };\n\n  const getTimeLeft = function (end) {\n    const curTime = Date.parse(new Date());\n    const difference = end - curTime;\n    let {\n      total\n    } = timeLeft;\n    total = difference / 1000;\n    const min = Math.trunc(total / 60 % 60);\n    const sec = total % 60;\n    return {\n      total,\n      min,\n      sec\n    };\n  };\n\n  const handleStartTimer = function (e) {\n    const end = Date.parse(new Date()) + timeLeft.total * 1000;\n    setBtnText(`Don't forget to stir!`);\n    setHover(false);\n    if (btnText === `Don't forget to stir!` || btnText === `STOP`) return;\n    const initialTotal = timeLeft.total;\n    console.log(hover);\n    const interval = setInterval(() => {\n      timeLeft = getTimeLeft(end);\n      updateTimer();\n      setDasharray((1 - (timeLeft.total - 1) / initialTotal) * 283);\n\n      if (timeLeft.total <= 0) {\n        clearInterval(interval);\n        setHover(true);\n        playPause();\n        setBtnText(`STOP`);\n      }\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonClose, {\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container__timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"timer-container__timer--circle\",\n          viewBox: \"0 0 100 100\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"50\",\n            cy: \"50\",\n            r: \"45\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeDasharray: dasharray + ' 283',\n            className: \"base-timer__path-remaining\",\n            d: \" M 50, 50 m -45, 0 a 45,45 0 1,0 90,0 a 45,45 0 1,0 -90,0 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: timeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStart, {\n        hover: hover,\n        onClick: btnText === `STOP` ? onClick : handleStartTimer,\n        text: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: myRef,\n        src: \"timer.mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"timer-container__img\",\n        src: \"img/wheat-bg.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerContainer, \"GW5HAsrAz5WzufaI/w+oB7nEYJ4=\");\n\n_c = TimerContainer;\nexport default TimerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerContainer\");","map":{"version":3,"names":["React","ButtonClose","ButtonStart","useState","useRef","TimerContainer","onClick","name","grainsTime","timeValue","setTimeValue","toString","padStart","dasharray","setDasharray","btnText","setBtnText","hover","setHover","isPlaying","setIsPlaying","myRef","playPause","current","pause","play","timeLeft","total","min","sec","updateTimer","getTimeLeft","end","curTime","Date","parse","difference","Math","trunc","handleStartTimer","e","initialTotal","console","log","interval","setInterval","clearInterval"],"sources":["/Users/ulana/grains-timer/src/components/TimerContainer.jsx"],"sourcesContent":["import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport ButtonStart from './ButtonStart';\nimport { useState, useRef } from 'react';\n\nfunction TimerContainer({ onClick, name, grainsTime }) {\n  const [timeValue, setTimeValue] = useState(\n    `${grainsTime.toString().padStart(2, '0')}:00`\n  );\n  const [dasharray, setDasharray] = useState(0);\n  const [btnText, setBtnText] = useState('START');\n  const [hover, setHover] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const myRef = useRef();\n\n  const playPause = function () {\n    isPlaying ? myRef.current.pause() : myRef.current.play();\n    setIsPlaying(true);\n  };\n\n  let timeLeft = {\n    total: grainsTime * 60,\n    min: grainsTime,\n    sec: 0,\n  };\n\n  const updateTimer = function () {\n    setTimeValue(\n      `${timeLeft.min.toString().padStart(2, '0')}:${timeLeft.sec\n        .toString()\n        .padStart(2, '0')}`\n    );\n  };\n\n  const getTimeLeft = function (end) {\n    const curTime = Date.parse(new Date());\n    const difference = end - curTime;\n    let { total } = timeLeft;\n    total = difference / 1000;\n\n    const min = Math.trunc((total / 60) % 60);\n    const sec = total % 60;\n\n    return {\n      total,\n      min,\n      sec,\n    };\n  };\n\n  const handleStartTimer = function (e) {\n    const end = Date.parse(new Date()) + timeLeft.total * 1000;\n    setBtnText(`Don't forget to stir!`);\n    setHover(false);\n    if (btnText === `Don't forget to stir!` || btnText === `STOP`) return;\n    const initialTotal = timeLeft.total;\n\n    console.log(hover);\n    const interval = setInterval(() => {\n      timeLeft = getTimeLeft(end);\n      updateTimer();\n      setDasharray((1 - (timeLeft.total - 1) / initialTotal) * 283);\n      if (timeLeft.total <= 0) {\n        clearInterval(interval);\n        setHover(true);\n        playPause();\n        setBtnText(`STOP`);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className=\"timer-overlay\">\n      <div className=\"timer-container\">\n        <h2>{name}</h2>\n        <ButtonClose onClick={onClick} />\n        <div className=\"timer-container__timer\">\n          <svg\n            className=\"timer-container__timer--circle\"\n            viewBox=\"0 0 100 100\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle cx=\"50\" cy=\"50\" r=\"45\" />\n            <path\n              strokeDasharray={dasharray + ' 283'}\n              className=\"base-timer__path-remaining\"\n              d=\"\n          M 50, 50\n          m -45, 0\n          a 45,45 0 1,0 90,0\n          a 45,45 0 1,0 -90,0\n        \"\n            ></path>\n          </svg>\n          <p>{timeValue}</p>\n        </div>\n        <ButtonStart\n          hover={hover}\n          onClick={btnText === `STOP` ? onClick : handleStartTimer}\n          text={btnText}\n        />\n        <audio ref={myRef} src=\"timer.mp3\"></audio>\n        <img className=\"timer-container__img\" src=\"img/wheat-bg.svg\" alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nexport default TimerContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}